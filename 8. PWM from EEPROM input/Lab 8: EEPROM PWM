/*
 * Lab 8.c
 *
 * Created: 4/21/2021 7:47:29 PM
 * Author : Sebastian
 */ 

#include <avr/io.h>
#include <avr/eeprom.h>
#include <avr/interrupt.h>
#define LED_ON PORTB |= (1<<PORTB5)
#define LED_OFF PORTB &= ~(1<<PORTB5)

void duty_timer(){
	TCCR2A |= (1<<WGM21);				//sets timer2 to CTC: PWM
	OCR2A = 255;					//
	TIMSK2 |= (1<<OCIE2A|1<<OCIE2B);	//Enable interrupts
	TCCR2B |= (1<<CS22|1<<CS21|1<<CS20);//sets prescaler to 1024 PWM
}

int main(void)
{
    sei();
    DDRD |= (1<<DDB5);	//PINB5 set as output for LED

    uint8_t Data;
	uint8_t duty = 0;
	Data = eeprom_read_byte((uint8_t*)0);
	if(Data > 9){
		Data = 0;
		eeprom_update_byte(0, Data);
	}else{
		Data += 1;
		eeprom_update_byte(0, Data);
	}
	duty = Data * 25;
	OCR2B = duty;
	duty_timer();
    while (1) 
    {
    }
}
ISR(TIMER2_COMPA_vect){
	LED_ON;
}
ISR(TIMER2_COMPB_vect){
	LED_OFF;
}